def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'com.google.gms.google-services'
apply plugin: 'com.google.firebase.appdistribution'
apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"

android
{
    compileSdkVersion 30
    buildToolsVersion '30.0.2'

    sourceSets
    {
        main.java.srcDirs += 'src/main/kotlin'
    }

    lintOptions
    {
        disable 'InvalidPackage'
    }

    defaultConfig
    {
        applicationId 'com.mauriciotogneri.languages'
        minSdkVersion 21
        targetSdkVersion 30
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
    }

    signingConfigs
    {
        debug
        {
            storeFile file('debug.keystore')
        }

        release
        {
            keyAlias project.hasProperty('RELEASE_KEY_ALIAS') ? RELEASE_KEY_ALIAS : ''
            keyPassword project.hasProperty('RELEASE_KEY_PASSWORD') ? RELEASE_KEY_PASSWORD : ''
            storePassword project.hasProperty('RELEASE_STORE_PASSWORD') ? RELEASE_STORE_PASSWORD : ''
            storeFile project.hasProperty('RELEASE_STORE_FILE') ? file(RELEASE_STORE_FILE) : file('.')
        }
    }

    buildTypes
    {
        debug
        {
            debuggable true
        }

        release
        {
            debuggable false
            minifyEnabled false
            shrinkResources false
            signingConfig signingConfigs.release

            firebaseAppDistribution
            {
                groups="android-testers"
            }
        }
    }
}

flutter
{
    source '../..'
}

dependencies
{
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
}